{
    "sourceFile": "assets/js/homepage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1638404624630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1638404624630,
            "name": "Commit-0",
            "content": "var repoContainerEl = document.querySelector(\"#repos-container\");\r\nvar repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\nvar userFormEl = document.querySelector(\"#user-form\");\r\nvar nameInputEl = document.querySelector(\"#username\");\r\n\r\nvar formSubmitHandler = function(e) {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    // get value from input element\r\n    // trim is used in case user accidentally add space char at end of input\r\n    var username = nameInputEl.value.trim();\r\n\r\n    if (username) {\r\n        getUserRepos(username);\r\n        nameInputEl.value = \"\";\r\n    } else {\r\n        alert(\"Please enter a GitHub username\");\r\n    }\r\n  };\r\n\r\nvar getUserRepos = function(user) {\r\n    // format the github api url\r\n    var apiUrl = \"https://api.github.com/users/\" + user + \"/repos\";\r\n  \r\n    // make a request to the url\r\n    fetch(apiUrl).then(function(response) {\r\n        if (response.ok) {\r\n          response.json().then(function(data) {\r\n            displayRepos(data, user);\r\n          });\r\n        } else {\r\n          alert(\"Error: GitHub User Not Found\");\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        // Notice this `.catch()` getting chained onto the end of the `.then()` method\r\n        alert(\"Unable to connect to GitHub\");\r\n      });\r\n  \r\nvar displayRepos = function(repos, searchTerm) {\r\n    console.log(repos);\r\n    console.log(searchTerm);\r\n    // check if api returned any repos\r\n    if (repos.length === 0) {\r\n        repoContainerEl.textContent = \"No repositories found.\";\r\n        return;\r\n    }\r\n    // clear old content\r\n    repoContainerEl.textContent = \"\";\r\n    repoSearchTerm.textContent = searchTerm;\r\n    // loop over repos\r\n    for (var i = 0; i < repos.length; i++) {\r\n        // format repo name\r\n        var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n    \r\n        // create a container for each repo\r\n        var repoEl = document.createElement(\"div\");\r\n        repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n    \r\n        // create a span element to hold repository name\r\n        var titleEl = document.createElement(\"span\");\r\n        titleEl.textContent = repoName;\r\n    \r\n        // append to container\r\n        repoEl.appendChild(titleEl);\r\n        \r\n        // create a status element\r\n        var statusEl = document.createElement(\"span\");\r\n        statusEl.classList = \"flex-row align-center\";\r\n\r\n        // check if current repo has issues or not\r\n        if (repos[i].open_issues_count > 0) {\r\n        statusEl.innerHTML =\r\n            \"<i class='fas fa-times status-icon icon-danger'></i>\" + repos[i].open_issues_count + \" issue(s)\";\r\n        } else {\r\n        statusEl.innerHTML = \"<i class='fas fa-check-square status-icon icon-success'></i>\";\r\n        }\r\n\r\n        // append to container\r\n        repoEl.appendChild(statusEl);\r\n    \r\n        // append container to the dom\r\n        repoContainerEl.appendChild(repoEl);\r\n    }\r\n};\r\n\r\n\r\nuserFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n"
        }
    ]
}
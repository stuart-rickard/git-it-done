{
    "sourceFile": "assets/js/homepage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1638404624630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638405133113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,88 +1,94 @@\n+var userFormEl = document.querySelector(\"#user-form\");\r\n+var nameInputEl = document.querySelector(\"#username\");\r\n var repoContainerEl = document.querySelector(\"#repos-container\");\r\n var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n-var userFormEl = document.querySelector(\"#user-form\");\r\n-var nameInputEl = document.querySelector(\"#username\");\r\n \r\n-var formSubmitHandler = function(e) {\r\n-    e.preventDefault();\r\n-    console.log(e);\r\n-    // get value from input element\r\n-    // trim is used in case user accidentally add space char at end of input\r\n-    var username = nameInputEl.value.trim();\r\n+var formSubmitHandler = function(event) {\r\n+  // prevent page from refreshing\r\n+  event.preventDefault();\r\n \r\n-    if (username) {\r\n-        getUserRepos(username);\r\n-        nameInputEl.value = \"\";\r\n-    } else {\r\n-        alert(\"Please enter a GitHub username\");\r\n-    }\r\n-  };\r\n+  // get value from input element\r\n+  var username = nameInputEl.value.trim();\r\n \r\n+  if (username) {\r\n+    getUserRepos(username);\r\n+\r\n+    // clear old content\r\n+    repoContainerEl.textContent = \"\";\r\n+    nameInputEl.value = \"\";\r\n+  } else {\r\n+    alert(\"Please enter a GitHub username\");\r\n+  }\r\n+};\r\n+\r\n var getUserRepos = function(user) {\r\n-    // format the github api url\r\n-    var apiUrl = \"https://api.github.com/users/\" + user + \"/repos\";\r\n-  \r\n-    // make a request to the url\r\n-    fetch(apiUrl).then(function(response) {\r\n-        if (response.ok) {\r\n-          response.json().then(function(data) {\r\n-            displayRepos(data, user);\r\n-          });\r\n-        } else {\r\n-          alert(\"Error: GitHub User Not Found\");\r\n-        }\r\n-      })\r\n-      .catch(function(error) {\r\n-        // Notice this `.catch()` getting chained onto the end of the `.then()` method\r\n-        alert(\"Unable to connect to GitHub\");\r\n-      });\r\n-  \r\n+  // format the github api url\r\n+  var apiUrl = \"https://api.github.com/users/\" + user + \"/repos\";\r\n+\r\n+  // make a get request to url\r\n+  fetch(apiUrl)\r\n+    .then(function(response) {\r\n+      // request was successful\r\n+      if (response.ok) {\r\n+        console.log(response);\r\n+        response.json().then(function(data) {\r\n+          console.log(data);\r\n+          displayRepos(data, user);\r\n+        });\r\n+      } else {\r\n+        alert(\"Error: \" + response.statusText);\r\n+      }\r\n+    })\r\n+    .catch(function(error) {\r\n+      alert(\"Unable to connect to GitHub\");\r\n+    });\r\n+};\r\n+\r\n var displayRepos = function(repos, searchTerm) {\r\n-    console.log(repos);\r\n-    console.log(searchTerm);\r\n-    // check if api returned any repos\r\n-    if (repos.length === 0) {\r\n-        repoContainerEl.textContent = \"No repositories found.\";\r\n-        return;\r\n+  // check if api returned any repos\r\n+  if (repos.length === 0) {\r\n+    repoContainerEl.textContent = \"No repositories found.\";\r\n+    return;\r\n+  }\r\n+\r\n+  repoSearchTerm.textContent = searchTerm;\r\n+\r\n+  // loop over repos\r\n+  for (var i = 0; i < repos.length; i++) {\r\n+    // format repo name\r\n+    var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n+\r\n+    // create a container for each repo\r\n+    var repoEl = document.createElement(\"a\");\r\n+    repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n+    repoEl.setAttribute(\"href\", \"./single-repo.html\");\r\n+\r\n+    // create a span element to hold repository name\r\n+    var titleEl = document.createElement(\"span\");\r\n+    titleEl.textContent = repoName;\r\n+\r\n+    // append to container\r\n+    repoEl.appendChild(titleEl);\r\n+\r\n+    // create a status element\r\n+    var statusEl = document.createElement(\"span\");\r\n+    statusEl.classList = \"flex-row align-center\";\r\n+\r\n+    // check if current repo has issues or not\r\n+    if (repos[i].open_issues_count > 0) {\r\n+      statusEl.innerHTML =\r\n+        \"<i class='fas fa-times status-icon icon-danger'></i>\" + repos[i].open_issues_count + \" issue(s)\";\r\n+    } else {\r\n+      statusEl.innerHTML = \"<i class='fas fa-check-square status-icon icon-success'></i>\";\r\n     }\r\n-    // clear old content\r\n-    repoContainerEl.textContent = \"\";\r\n-    repoSearchTerm.textContent = searchTerm;\r\n-    // loop over repos\r\n-    for (var i = 0; i < repos.length; i++) {\r\n-        // format repo name\r\n-        var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n-    \r\n-        // create a container for each repo\r\n-        var repoEl = document.createElement(\"div\");\r\n-        repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n-    \r\n-        // create a span element to hold repository name\r\n-        var titleEl = document.createElement(\"span\");\r\n-        titleEl.textContent = repoName;\r\n-    \r\n-        // append to container\r\n-        repoEl.appendChild(titleEl);\r\n-        \r\n-        // create a status element\r\n-        var statusEl = document.createElement(\"span\");\r\n-        statusEl.classList = \"flex-row align-center\";\r\n \r\n-        // check if current repo has issues or not\r\n-        if (repos[i].open_issues_count > 0) {\r\n-        statusEl.innerHTML =\r\n-            \"<i class='fas fa-times status-icon icon-danger'></i>\" + repos[i].open_issues_count + \" issue(s)\";\r\n-        } else {\r\n-        statusEl.innerHTML = \"<i class='fas fa-check-square status-icon icon-success'></i>\";\r\n-        }\r\n+    // append to container\r\n+    repoEl.appendChild(statusEl);\r\n \r\n-        // append to container\r\n-        repoEl.appendChild(statusEl);\r\n-    \r\n-        // append container to the dom\r\n-        repoContainerEl.appendChild(repoEl);\r\n-    }\r\n+    // append container to the dom\r\n+    repoContainerEl.appendChild(repoEl);\r\n+  }\r\n };\r\n \r\n-\r\n+// add event listeners to forms\r\n userFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n"
                },
                {
                    "date": 1638405709843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+var userFormEl = document.querySelector(\"#user-form\");\r\n+var nameInputEl = document.querySelector(\"#username\");\r\n+var repoContainerEl = document.querySelector(\"#repos-container\");\r\n+var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n+\r\n+var formSubmitHandler = function(event) {\r\n+  // prevent page from refreshing\r\n+  event.preventDefault();\r\n+\r\n+  // get value from input element\r\n+  var username = nameInputEl.value.trim();\r\n+\r\n+  if (username) {\r\n+    getUserRepos(username);\r\n+\r\n+    // clear old content\r\n+    repoContainerEl.textContent = \"\";\r\n+    nameInputEl.value = \"\";\r\n+  } else {\r\n+    alert(\"Please enter a GitHub username\");\r\n+  }\r\n+};\r\n+\r\n+var getUserRepos = function(user) {\r\n+  // format the github api url\r\n+  var apiUrl = \"https://api.github.com/users/\" + user + \"/repos\";\r\n+\r\n+  // make a get request to url\r\n+  fetch(apiUrl)\r\n+    .then(function(response) {\r\n+      // request was successful\r\n+      if (response.ok) {\r\n+        console.log(response);\r\n+        response.json().then(function(data) {\r\n+          console.log(data);\r\n+          displayRepos(data, user);\r\n+        });\r\n+      } else {\r\n+        alert(\"Error: \" + response.statusText);\r\n+      }\r\n+    })\r\n+    .catch(function(error) {\r\n+      alert(\"Unable to connect to GitHub\");\r\n+    });\r\n+};\r\n+\r\n+var displayRepos = function(repos, searchTerm) {\r\n+  // check if api returned any repos\r\n+  if (repos.length === 0) {\r\n+    repoContainerEl.textContent = \"No repositories found.\";\r\n+    return;\r\n+  }\r\n+\r\n+  repoSearchTerm.textContent = searchTerm;\r\n+\r\n+  // loop over repos\r\n+  for (var i = 0; i < repos.length; i++) {\r\n+    // format repo name\r\n+    var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n+\r\n+    // create a container for each repo\r\n+    var repoEl = document.createElement(\"a\");\r\n+    repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n+    repoEl.setAttribute(\"href\", \"./single-repo.html?repo=\" + repoName);\r\n+\r\n+    // create a span element to hold repository name\r\n+    var titleEl = document.createElement(\"span\");\r\n+    titleEl.textContent = repoName;\r\n+\r\n+    // append to container\r\n+    repoEl.appendChild(titleEl);\r\n+\r\n+    // create a status element\r\n+    var statusEl = document.createElement(\"span\");\r\n+    statusEl.classList = \"flex-row align-center\";\r\n+\r\n+    // check if current repo has issues or not\r\n+    if (repos[i].open_issues_count > 0) {\r\n+      statusEl.innerHTML =\r\n+        \"<i class='fas fa-times status-icon icon-danger'></i>\" + repos[i].open_issues_count + \" issue(s)\";\r\n+    } else {\r\n+      statusEl.innerHTML = \"<i class='fas fa-check-square status-icon icon-success'></i>\";\r\n+    }\r\n+\r\n+    // append to container\r\n+    repoEl.appendChild(statusEl);\r\n+\r\n+    // append container to the dom\r\n+    repoContainerEl.appendChild(repoEl);\r\n+  }\r\n+};\r\n+\r\n+// add event listeners to forms\r\n+userFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n"
                },
                {
                    "date": 1638458543801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,14 @@\n var nameInputEl = document.querySelector(\"#username\");\r\n var repoContainerEl = document.querySelector(\"#repos-container\");\r\n var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n \r\n+var getFeaturedRepos = function(language) {\r\n+    var apiUrl = \"https://api.github.com/search/repositories?q=\" + language + \"+is:featured&sort=help-wanted-issues\";\r\n+  \r\n+    fetch(apiUrl);\r\n+  };\r\n+\r\n var formSubmitHandler = function(event) {\r\n   // prevent page from refreshing\r\n   event.preventDefault();\r\n \r\n@@ -57,9 +63,9 @@\n   for (var i = 0; i < repos.length; i++) {\r\n     // format repo name\r\n     var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n \r\n-    // create a container for each repo\r\n+    // create a link for each repo\r\n     var repoEl = document.createElement(\"a\");\r\n     repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n     repoEl.setAttribute(\"href\", \"./single-repo.html?repo=\" + repoName);\r\n \r\n@@ -91,98 +97,4 @@\n };\r\n \r\n // add event listeners to forms\r\n userFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n-var userFormEl = document.querySelector(\"#user-form\");\r\n-var nameInputEl = document.querySelector(\"#username\");\r\n-var repoContainerEl = document.querySelector(\"#repos-container\");\r\n-var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n-\r\n-var formSubmitHandler = function(event) {\r\n-  // prevent page from refreshing\r\n-  event.preventDefault();\r\n-\r\n-  // get value from input element\r\n-  var username = nameInputEl.value.trim();\r\n-\r\n-  if (username) {\r\n-    getUserRepos(username);\r\n-\r\n-    // clear old content\r\n-    repoContainerEl.textContent = \"\";\r\n-    nameInputEl.value = \"\";\r\n-  } else {\r\n-    alert(\"Please enter a GitHub username\");\r\n-  }\r\n-};\r\n-\r\n-var getUserRepos = function(user) {\r\n-  // format the github api url\r\n-  var apiUrl = \"https://api.github.com/users/\" + user + \"/repos\";\r\n-\r\n-  // make a get request to url\r\n-  fetch(apiUrl)\r\n-    .then(function(response) {\r\n-      // request was successful\r\n-      if (response.ok) {\r\n-        console.log(response);\r\n-        response.json().then(function(data) {\r\n-          console.log(data);\r\n-          displayRepos(data, user);\r\n-        });\r\n-      } else {\r\n-        alert(\"Error: \" + response.statusText);\r\n-      }\r\n-    })\r\n-    .catch(function(error) {\r\n-      alert(\"Unable to connect to GitHub\");\r\n-    });\r\n-};\r\n-\r\n-var displayRepos = function(repos, searchTerm) {\r\n-  // check if api returned any repos\r\n-  if (repos.length === 0) {\r\n-    repoContainerEl.textContent = \"No repositories found.\";\r\n-    return;\r\n-  }\r\n-\r\n-  repoSearchTerm.textContent = searchTerm;\r\n-\r\n-  // loop over repos\r\n-  for (var i = 0; i < repos.length; i++) {\r\n-    // format repo name\r\n-    var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n-\r\n-    // create a container for each repo\r\n-    var repoEl = document.createElement(\"a\");\r\n-    repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n-    repoEl.setAttribute(\"href\", \"./single-repo.html\");\r\n-\r\n-    // create a span element to hold repository name\r\n-    var titleEl = document.createElement(\"span\");\r\n-    titleEl.textContent = repoName;\r\n-\r\n-    // append to container\r\n-    repoEl.appendChild(titleEl);\r\n-\r\n-    // create a status element\r\n-    var statusEl = document.createElement(\"span\");\r\n-    statusEl.classList = \"flex-row align-center\";\r\n-\r\n-    // check if current repo has issues or not\r\n-    if (repos[i].open_issues_count > 0) {\r\n-      statusEl.innerHTML =\r\n-        \"<i class='fas fa-times status-icon icon-danger'></i>\" + repos[i].open_issues_count + \" issue(s)\";\r\n-    } else {\r\n-      statusEl.innerHTML = \"<i class='fas fa-check-square status-icon icon-success'></i>\";\r\n-    }\r\n-\r\n-    // append to container\r\n-    repoEl.appendChild(statusEl);\r\n-\r\n-    // append container to the dom\r\n-    repoContainerEl.appendChild(repoEl);\r\n-  }\r\n-};\r\n-\r\n-// add event listeners to forms\r\n-userFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n"
                },
                {
                    "date": 1638458752019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,15 @@\n \r\n var getFeaturedRepos = function(language) {\r\n     var apiUrl = \"https://api.github.com/search/repositories?q=\" + language + \"+is:featured&sort=help-wanted-issues\";\r\n   \r\n-    fetch(apiUrl);\r\n+    fetch(apiUrl).then(function(response) {\r\n+      if (response.ok) {\r\n+        console.log(response);\r\n+      } else {\r\n+        alert('Error: GitHub User Not Found');\r\n+      }\r\n+    });\r\n   };\r\n \r\n var formSubmitHandler = function(event) {\r\n   // prevent page from refreshing\r\n"
                },
                {
                    "date": 1638458958572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,11 @@\n     var apiUrl = \"https://api.github.com/search/repositories?q=\" + language + \"+is:featured&sort=help-wanted-issues\";\r\n   \r\n     fetch(apiUrl).then(function(response) {\r\n       if (response.ok) {\r\n-        console.log(response);\r\n+        response.json().then(function(data) {\r\n+          console.log(data)\r\n+        });\r\n       } else {\r\n         alert('Error: GitHub User Not Found');\r\n       }\r\n     });\r\n"
                },
                {
                    "date": 1638459056205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   \r\n     fetch(apiUrl).then(function(response) {\r\n       if (response.ok) {\r\n         response.json().then(function(data) {\r\n-          console.log(data)\r\n+          displayRepos(data.items, language);\r\n         });\r\n       } else {\r\n         alert('Error: GitHub User Not Found');\r\n       }\r\n"
                },
                {
                    "date": 1638459753767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+var languageButtonsEl = document.getElementById(\"language-buttons\");\r\n var userFormEl = document.querySelector(\"#user-form\");\r\n var nameInputEl = document.querySelector(\"#username\");\r\n var repoContainerEl = document.querySelector(\"#repos-container\");\r\n var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n"
                },
                {
                    "date": 1638459821094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n var nameInputEl = document.querySelector(\"#username\");\r\n var repoContainerEl = document.querySelector(\"#repos-container\");\r\n var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n \r\n+\r\n+\r\n var getFeaturedRepos = function(language) {\r\n     var apiUrl = \"https://api.github.com/search/repositories?q=\" + language + \"+is:featured&sort=help-wanted-issues\";\r\n   \r\n     fetch(apiUrl).then(function(response) {\r\n"
                },
                {
                    "date": 1638460039655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,13 @@\n var nameInputEl = document.querySelector(\"#username\");\r\n var repoContainerEl = document.querySelector(\"#repos-container\");\r\n var repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\n \r\n+var buttonClickHandler = function(e){\r\n+    var language = e.target.getAttribute(\"data-language\");\r\n+    console.log(language);\r\n+}\r\n \r\n-\r\n var getFeaturedRepos = function(language) {\r\n     var apiUrl = \"https://api.github.com/search/repositories?q=\" + language + \"+is:featured&sort=help-wanted-issues\";\r\n   \r\n     fetch(apiUrl).then(function(response) {\r\n"
                },
                {
                    "date": 1638460146138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,4 +111,5 @@\n };\r\n \r\n // add event listeners to forms\r\n userFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n+languageButtonsEl.addEventListener(\"click\", buttonClickHandler);\r\n"
                }
            ],
            "date": 1638404624630,
            "name": "Commit-0",
            "content": "var repoContainerEl = document.querySelector(\"#repos-container\");\r\nvar repoSearchTerm = document.querySelector(\"#repo-search-term\");\r\nvar userFormEl = document.querySelector(\"#user-form\");\r\nvar nameInputEl = document.querySelector(\"#username\");\r\n\r\nvar formSubmitHandler = function(e) {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    // get value from input element\r\n    // trim is used in case user accidentally add space char at end of input\r\n    var username = nameInputEl.value.trim();\r\n\r\n    if (username) {\r\n        getUserRepos(username);\r\n        nameInputEl.value = \"\";\r\n    } else {\r\n        alert(\"Please enter a GitHub username\");\r\n    }\r\n  };\r\n\r\nvar getUserRepos = function(user) {\r\n    // format the github api url\r\n    var apiUrl = \"https://api.github.com/users/\" + user + \"/repos\";\r\n  \r\n    // make a request to the url\r\n    fetch(apiUrl).then(function(response) {\r\n        if (response.ok) {\r\n          response.json().then(function(data) {\r\n            displayRepos(data, user);\r\n          });\r\n        } else {\r\n          alert(\"Error: GitHub User Not Found\");\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        // Notice this `.catch()` getting chained onto the end of the `.then()` method\r\n        alert(\"Unable to connect to GitHub\");\r\n      });\r\n  \r\nvar displayRepos = function(repos, searchTerm) {\r\n    console.log(repos);\r\n    console.log(searchTerm);\r\n    // check if api returned any repos\r\n    if (repos.length === 0) {\r\n        repoContainerEl.textContent = \"No repositories found.\";\r\n        return;\r\n    }\r\n    // clear old content\r\n    repoContainerEl.textContent = \"\";\r\n    repoSearchTerm.textContent = searchTerm;\r\n    // loop over repos\r\n    for (var i = 0; i < repos.length; i++) {\r\n        // format repo name\r\n        var repoName = repos[i].owner.login + \"/\" + repos[i].name;\r\n    \r\n        // create a container for each repo\r\n        var repoEl = document.createElement(\"div\");\r\n        repoEl.classList = \"list-item flex-row justify-space-between align-center\";\r\n    \r\n        // create a span element to hold repository name\r\n        var titleEl = document.createElement(\"span\");\r\n        titleEl.textContent = repoName;\r\n    \r\n        // append to container\r\n        repoEl.appendChild(titleEl);\r\n        \r\n        // create a status element\r\n        var statusEl = document.createElement(\"span\");\r\n        statusEl.classList = \"flex-row align-center\";\r\n\r\n        // check if current repo has issues or not\r\n        if (repos[i].open_issues_count > 0) {\r\n        statusEl.innerHTML =\r\n            \"<i class='fas fa-times status-icon icon-danger'></i>\" + repos[i].open_issues_count + \" issue(s)\";\r\n        } else {\r\n        statusEl.innerHTML = \"<i class='fas fa-check-square status-icon icon-success'></i>\";\r\n        }\r\n\r\n        // append to container\r\n        repoEl.appendChild(statusEl);\r\n    \r\n        // append container to the dom\r\n        repoContainerEl.appendChild(repoEl);\r\n    }\r\n};\r\n\r\n\r\nuserFormEl.addEventListener(\"submit\", formSubmitHandler);\r\n"
        }
    ]
}